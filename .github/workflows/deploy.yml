name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Build
      run: |
        cd frontend
        # Set the API URL for production build - using local backend option
        echo "VITE_API_URL=http://localhost:5000/api" > .env.production
        npm run build
        
    - name: Copy 404.html for SPA routing
      run: |
        cd frontend
        # Copy 404.html to dist for SPA routing if it exists
        if [ -f "public/404.html" ]; then
          cp public/404.html dist/404.html
          echo "404.html copied successfully"
        else
          echo "404.html not found, creating a simple one"
          echo '<!DOCTYPE html><html><head><meta charset="utf-8"><title>Portfolio Tester</title><script>var l=window.location;l.replace(l.protocol+"//"+l.hostname+(l.port?":"+l.port:"")+l.pathname.split("/").slice(0,2).join("/")+"/?/"+l.pathname.slice(1).split("/").slice(1).join("/").replace(/&/g,"~and~")+(l.search?"&"+l.search.slice(1).replace(/&/g,"~and~"):"")+l.hash);</script></head><body></body></html>' > dist/404.html
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: frontend/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 